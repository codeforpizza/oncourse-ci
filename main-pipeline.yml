##################################
#                                #
#  Concourse - CI Config File    #
#                                #
##################################

# Main Jobs where git test live

# Resource Types For Reading Pull Request 
resource_types:
- name: pull-request
  type: docker-image
  source:
    repository: jtarchie/pr

# Resource Types For Resource key value
resource_types:
  - name: keyval
    type: docker-image
    source:
      repository: swce/keyval-resource

# Defining Resources for triggering CI duplicate for each and every one of the service
resources:
- name: pr-service-main
  type: pull-request
  source: 
        access_token: ((github-token))
        repo: codeforpizza/oncourse-ci
        base: master 

- name: keyvalService1
  type: keyval

- name: keyvalService2
  type: keyval

# Defining Jobs for the CI Pipeline


############################## Main Jobs ##########################
jobs:
- name: master-check
  plan:
  - aggregate:
    - get: pr-service-main
      trigger: true
      version: every
    - get: keyvalService1
    - get: keyvalService2
  - task: service-master-check
    config: 
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: alpine/git}
      inputs: 
      - name: pr-service-main
      outputs:
      - name: keyval
      run:
        path: /bin/sh
        args: 
          - -c
          - |
            ls 
            cd pr-service-main 
            cat .git/head_sha
            echo service:true >> ../keyval/keyTest.1.properties
            echo service:false >> ../keyval/keyTest.2.properties
            echo service:true >> ../keyval/keyTest.3.properties
  
  - put: keyvalService1
    params:
      file: keyval/keyTest.1.properties
  - put: keyvalService2
    params:
      file: keyval/keyTest.2.properties
  - put: keyvalService3
    params:
      file: keyval/keyTest.3.properties




############################## Services Jobs ##########################
- name: service-1
  plan:
  - get: keyvalService1
    trigger: true
    passed:
      - master-check
  - task: service-1-check
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: alpine/git}
      inputs: 
      - name: pr-service-main
      run:
        path: /bin/sh
        args: 
          - -c
          - |
            #!/bin/bash

            # check if service need to be built
            serviceStatus=`cat keyvalService1/keyval.properties | grep service=`
            echo $serviceStatus
            if [[ "$serviceStatus" == "service=true" ]]; then

              # Service related variable
              serviceName=contrib
              servicePath=contrib/completion/

              # git related variable
              gitURI=https://github.com/git/git.git
              gitBranch=master
              gitToken=""

              echo "Running Sparse Checkout for $servicePath from $gitURI on branch $gitBranch"

              # Initializing git folder
              mkdir -p $serviceName
              cd $serviceName

              # Initializing git sparse
              git init
              git config core.sparsecheckout true

              echo $servicePath >> .git/info/sparse-checkout

              git remote add origin $gitURI

              git pull origin $gitBranch

              ls -Rla

              echo "Sparse Checkout Complete"
            else 
              echo "No changes on service , exiting sparse checkout"
            fi


- name: service-2
  plan:
  - get: keyvalService2
    trigger: true
    passed:
      - master-check
  - task: service-2-check
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: alpine/git}
      inputs:
      - name: keyvalService2
      run:
        path: /bin/sh
        args: 
          - -c
          - |
            #!/bin/bash

            # check if service need to be built
            serviceStatus=`cat keyvalService2/keyval.properties | grep service=`
            echo $serviceStatus
            if [[ "$serviceStatus" == "service=true" ]]; then

              # Service related variable
              serviceName=contrib
              servicePath=contrib/credential/

              # git related variable
              gitURI=https://github.com/git/git.git
              gitBranch=master
              gitToken=""

              echo "Running Sparse Checkout for $servicePath from $gitURI on branch $gitBranch"

              # Initializing git folder
              mkdir -p $serviceName
              cd $serviceName

              # Initializing git sparse
              git init
              git config core.sparsecheckout true

              echo $servicePath >> .git/info/sparse-checkout

              git remote add origin $gitURI

              git pull origin $gitBranch

              ls -Rla

              echo "Sparse Checkout Complete"
            else 
              echo "No changes on service , exiting sparse checkout"
            fi


- name: service-3
  plan:
  - get: keyvalService3
    trigger: true
    passed:
      - master-check
  - task: service-3-check
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: alpine/git}
      inputs:
      - name: keyvalService3
      run:
        path: /bin/sh
        args: 
          - -c
          - |
            #!/bin/bash

            # check if service need to be built
            serviceStatus=`cat keyvalService3/keyval.properties | grep service=`
            echo $serviceStatus
            if [[ "$serviceStatus" == "service=true" ]]; then

              # Service related variable
              serviceName=contrib
              servicePath=contrib/emacs/

              # git related variable
              gitURI=https://github.com/git/git.git
              gitBranch=master
              gitToken=""

              echo "Running Sparse Checkout for $servicePath from $gitURI on branch $gitBranch"

              # Initializing git folder
              mkdir -p $serviceName
              cd $serviceName

              # Initializing git sparse
              git init
              git config core.sparsecheckout true

              echo $servicePath >> .git/info/sparse-checkout

              git remote add origin $gitURI

              git pull origin $gitBranch

              ls -Rla

              echo "Sparse Checkout Complete"
            else 
              echo "No changes on service , exiting sparse checkout"
            fi
