##################################
#                                #
#  Concourse - CI Config File    #
#                                #
##################################

# Main Jobs where git test live

# Resource Types For Reading Pull Request 
resource_types:
- name: pull-request
  type: docker-image
  source:
    repository: jtarchie/pr

# Resource Types For Resource key value
- name: keyval
  type: docker-image
  source:
    repository: swce/keyval-resource

# Defining Resources for triggering CI duplicate for each and every one of the service
resources:
- name: pr-service-main
  type: pull-request
  source: 
        access_token: ((github-token))
        repo: codeforpizza/oncourse-ci
        base: master 

- name: keyvalService1
  type: keyval

- name: keyvalService2
  type: keyval

- name: keyvalService3
  type: keyval

# Defining Jobs for the CI Pipeline
jobs:
- name: master-check
  plan:
  - aggregate:
    - get: pr-service-main
      trigger: true
      version: every
    - get: keyvalService1
    - get: keyvalService2
    - get: keyvalService3
  - task: service-master-check
    config: 
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: alpine/git}
      inputs: 
      - name: pr-service-main
      outputs:
      - name: keyval
      run:
        path: sh 
        args: ['-c','cd pr-service-main && ls && git status && git config --get pullrequest.basesha']

- name: service-1
  plan:
  - get: keyvalService1
    trigger: true
    passed:
      - master-check
  - task: service-1-check
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: alpine/git}
      inputs: 
      - name: pr-service-main
      run:
        path: sh 
        args: ['-c','cd pr-service-main && git status && ls']


- name: service-2
  plan:
  - get: keyvalService2
    trigger: true
    version: every
    passed:
      - master-check
  - task: service-2-check
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: alpine/git}
      inputs: 
      - name: pr-service-main
      run:
        path: sh 
        args: ['-c','cd pr-service-main && git status']


- name: service-3
  plan:
  - get: keyvalService3
    trigger: true
    version: every
    passed:
      - master-check
  - task: service-3-check
    config:
      platform: linux
      image_resource:
        type: docker-image
        source: {repository: alpine/git}
      inputs: 
      - name: pr-service-main
      run:
        path: sh 
        args: ['-c','cd pr-service-main && git status']

- name: deploy-service-1
  plan:
    - get: keyvalService1
      trigger: true
      version: every
      passed:
        - service-1
    - task: service-1-deploy
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: {repository: alpine/git}
        run:
          path: sh 
          args: ['-c','cd pr-service-main && git status']

- name: deploy-service-2
  plan:
    - get: keyvalService2
      trigger: true
      version: every
      passed:
        - service-2
    - task: service-2-deploy
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: {repository: alpine/git}
        run:
          path: sh 
          args: ['-c','cd pr-service-main && git status']

- name: deploy-service-3
  plan:
    - get: keyvalService3
      trigger: true
      version: every
      passed:
        - service-3
    - task: service-3-deploy
      config:
        platform: linux
        image_resource:
          type: docker-image
          source: {repository: alpine/git}
        run:
          path: sh 
          args: ['-c','cd pr-service-main && git status']